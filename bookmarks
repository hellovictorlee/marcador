#!/usr/bin/env python3

"""Bookmarks.

Usage:
    bookmarks add <file> <url> <tags>...
    bookmarks print <file>
    bookmarks rm <file> <id>
    bookmarks find <file> <id> 
    bookmarks edit <file> <id>
    bookmarks tag-search <file> <tag>
    bookmarks tag-list <file>

Options:
  -h --help     Show this screen.
  --version     Show version.
"""

#bookmarks add <file> <url> <tags>... 
from docopt import docopt
from subprocess import call
import json, os

def add(args, books):
    tags = args['<tags>']
    url = args['<url>']
    file = args['<file>']
   

    id = len(books)
    row = {'id' : id, 'url' : url, 'tags' : tags}

    books.append(row)
    
    with open(file, 'w') as file:
        file.write(json.dumps(books, indent=2))

def print_book(id, url, tags):
    print(f"{id}. {url} ", end='')
    print(str(tags).replace(' ', '')[1:-1])

def print_books(args, books):
    for row in books:
        print_book(row['id'], row['url'], row['tags'])

def remove(args, books):
    id = int(args['<id>'])
    file = args['<file>']

    books.pop(id)
    for i, row in enumerate(books[id:]):
        row['id'] = id+i
    
    with open(file, 'w') as file:
        file.write(json.dumps(books, indent=2))

def find(args, books):
    id = int(args['<id>'])
    print(books[id]['url'])

def edit(args, books):
    id = int(args['<id>'])
    file = args['<file>']
    row = books[id]
    tags = row['tags']
    url = row['url']

    row = books[id]
    tmp_file = "/tmp/bookmarks.tmp"
    with open(tmp_file, "w") as tmp:
        tmp.write(url)
        tmp.write('\n')

        for tag in tags:
            tmp.write(tag)
            tmp.write('\n')
    
    term = os.path.expandvars("$TERM")
    editor = os.path.expandvars("$EDITOR")
    call([term, "-e", editor, tmp_file])

    with open(tmp_file, "r") as tmp:
        output = tmp.read().split('\n')
    
    output = [o for o in output if o != '']

    url = output[0]
    tags = [tag for tag in output[1:]]

    books[id]['url'] = url
    books[id]['tags'] = tags
    
    with open(file, 'w') as file:
        file.write(json.dumps(books, indent=2))


def tag_search(args, books):
    tag = args['<tag>']
    for row in books:
        for t in row['tags']:
            if t == tag:
                print_book(row['id'], row['url'], row['tags'])
               
def tag_list(args, books):
    tags = [tag for row in books for tag in row['tags']]
    for tag in set(tags):
        print(tag)

function_map = {
    'add' : add,
    'print' : print_books,
    'rm' : remove,
    'find' : find,
    'edit' : edit,
    'tag-search' : tag_search,
    'tag-list' : tag_list,
}

if __name__ == "__main__":
    arguments = docopt(__doc__, version='Bookmarks 0.1')

    with open(arguments['<file>']) as file:
        books = json.loads(file.read())

    for name, function in function_map.items():
        if arguments[name]:
            function(arguments, books)
